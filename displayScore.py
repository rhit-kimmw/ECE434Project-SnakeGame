#!/usr/bin/env python3
import smbus
import time

bus = smbus.SMBus(2)
matrix = 0x70

bus.write_byte_data(matrix, 0x21, 0)   # Start oscillator (p10)
bus.write_byte_data(matrix, 0x81, 0)   # Disp on, blink off (p11)
bus.write_byte_data(matrix, 0xe7, 0)   # Full brightness (page 15)

one =  [0x02,0x00,0x02,0x00,0x02,0x00,0x02,0x00,
         0x02,0x00,0x02,0x00,0x02,0x00,0x00,0x00]
two = [0x0e,0x00,0x08,0x00,0x08,0x00,0x0e,0x00,
       0x02,0x00,0x02,0x00,0x0e,0x00,0x00,0x00]
three = [0x0e,0x00,0x02,0x00,0x02,0x00,0x0e,0x00,
         0x02,0x00,0x02,0x00,0x0e,0x00,0x00,0x00]
four = [0x02,0x00,0x02,0x00,0x02,0x00,0x0e,0x00,
        0x0a,0x00,0x0a,0x00,0x0a,0x00,0x00,0x00]
five = [0x0e,0x00,0x02,0x00,0x02,0x00,0x0e,0x00,
       0x08,0x00,0x08,0x00,0x0e,0x00,0x00,0x00]
six = [0x0e,0x00,0x0a,0x00,0x0a,0x00,0x0e,0x00,
       0x08,0x00,0x08,0x00,0x0e,0x00,0x00,0x00]
seven = [0x02,0x00,0x02,0x00,0x02,0x00,0x02,0x00,
       0x0a,0x00,0x0a,0x00,0x0e,0x00,0x00,0x00]
eight = [0x0e,0x00,0x0a,0x00,0x0a,0x00,0x0e,0x00,
       0x0a,0x00,0x0a,0x00,0x0e,0x00,0x00,0x00]
nine = [0x0e,0x00,0x02,0x00,0x02,0x00,0x0e,0x00,
       0x0a,0x00,0x0a,0x00,0x0e,0x00,0x00,0x00]
zero = [0x0e,0x00,0x0a,0x00,0x0a,0x00,0x0a,0x00,
       0x0a,0x00,0x0a,0x00,0x0e,0x00,0x00,0x00]
numbers = [zero,one,two,three,four,five,six,seven,eight,nine]

def shift_to_tens_digit(ones_digit_matrix):
    tens_digit_matrix = [0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
         0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00]
    for i in range(len(ones_digit_matrix)):
        if ones_digit_matrix[i] != 0:
            tens_digit_matrix[i] = ones_digit_matrix[i] << 4
    return tens_digit_matrix

def getGameMatrix(tens_digit, ones_digit):
    game = [tens_digit[i] | ones_digit[i] for i in range(len(tens_digit))]
    return game

def displayNumber(num):
    tens_digit = shift_to_tens_digit(numbers[num // 10])
    ones_digit = numbers[num%10]
    game = getGameMatrix(tens_digit, ones_digit)
    bus.write_i2c_block_data(matrix, 0, game)


for i in range(100):
    displayNumber(i)
    time.sleep(0.3)